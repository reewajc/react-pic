{"version":3,"sources":["logo.svg","Loading.js","Photo.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Spinner","animation","variant","Photo","useState","photos","setphotos","loading","setLoading","fetchphotos","a","fetch","res","json","data","console","log","useEffect","style","fontSize","map","photo","CardGroup","Card","Body","Img","src","thumbnailUrl","alt","Title","title","Text","url","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,oECGA,SAASA,IACpB,OACI,8BACI,qBAAKC,UAAU,YAAf,SAEA,qCACV,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,cACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,WACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,YACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,SACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,UACpC,cAACF,EAAA,EAAD,CAASC,UAAU,SAASC,QAAQ,SACpC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,YAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,cAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,YAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,WAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,YAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,SAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,UAClC,cAACF,EAAA,EAAD,CAASC,UAAU,OAAOC,QAAQ,gBCnBrB,SAASC,IACpB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAW,uCAAG,8BAAAC,EAAA,sEACEC,MAAM,+CADR,cACVC,EADU,gBAEGA,EAAIC,OAFP,OAEVC,EAFU,OAGhBC,QAAQC,IAAIF,GACZR,EAAUQ,GACVN,GAAW,GALK,2CAAH,qDAYjB,OAJAS,qBAAU,WACNR,MACD,IAGC,sBAAKV,UAAU,kBAAf,UACM,qBAAKA,UAAU,2BAA2BmB,MAAO,CAACC,SAAS,IAA3D,4BACE,qBAAKpB,UAAU,UAAf,SAEJQ,EAAU,cAACT,EAAD,IAEXO,EAAOe,KAAI,SAAAC,GAAK,OAEf,cAACC,EAAA,EAAD,CAAWvB,UAAU,WAArB,SACI,cAACwB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,CAAWzB,UAAU,qBAArB,UACI,cAACwB,EAAA,EAAKE,IAAN,CAAUC,IAAKL,EAAMM,aAAcC,IAAI,SACvC,cAACL,EAAA,EAAKM,MAAN,CAAY9B,UAAU,eAAtB,SAAsCsB,EAAMS,QAC5C,cAACP,EAAA,EAAKQ,KAAN,UACIV,EAAMW,YANeX,EAAMY,Y,MCnBxCC,MANf,WACE,OACE,cAAC/B,EAAD,KCKWgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35d0aaa1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nexport default function Loading() {\n    return (\n        <div>\n            <div className=\"container\">\n              \n            <>\n  <Spinner animation=\"border\" variant=\"primary\" />\n  <Spinner animation=\"border\" variant=\"secondary\" />\n  <Spinner animation=\"border\" variant=\"success\" />\n  <Spinner animation=\"border\" variant=\"danger\" />\n  <Spinner animation=\"border\" variant=\"warning\" />\n  <Spinner animation=\"border\" variant=\"info\" />\n  <Spinner animation=\"border\" variant=\"light\" />\n  <Spinner animation=\"border\" variant=\"dark\" />\n  <Spinner animation=\"grow\" variant=\"primary\" />\n  <Spinner animation=\"grow\" variant=\"secondary\" />\n  <Spinner animation=\"grow\" variant=\"success\" />\n  <Spinner animation=\"grow\" variant=\"danger\" />\n  <Spinner animation=\"grow\" variant=\"warning\" />\n  <Spinner animation=\"grow\" variant=\"info\" />\n  <Spinner animation=\"grow\" variant=\"light\" />\n  <Spinner animation=\"grow\" variant=\"dark\" />\n</>\n                \n               \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useState, useEffect } from 'react'    \nimport { Card, CardGroup } from 'react-bootstrap'\nimport Loading from './Loading'\n\nexport default function Photo() {\n    const [photos, setphotos] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    const fetchphotos = async () => {\n        const res = await fetch('https://jsonplaceholder.typicode.com/photos')\n        const data = await res.json()\n        console.log(data)\n        setphotos(data)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        fetchphotos()\n    }, [])\n\n    return (\n        <div className=\"container-fluid\">\n              <div className=\"text-center text-primary\" style={{fontSize:50}}>Display Photos</div>\n                <div className=\"row m-2\"> \n                    \n           {loading ? <Loading /> : \n      \n           photos.map(photo => ( \n           \n            <CardGroup className=\"col-lg-3\" key={photo.id}>\n                <Card>\n                    <Card.Body className=\"text-light bg-dark\">\n                        <Card.Img src={photo.thumbnailUrl} alt=\"user\" />\n                        <Card.Title className=\"text-success\">{photo.title}</Card.Title>\n                        <Card.Text>\n                           {photo.url}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </CardGroup>\n     \n              ))}\n                     </div>\n        </div>\n    )\n           \n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Photo from './Photo';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Photo/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}